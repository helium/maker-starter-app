{
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module",
    "ecmaFeatures": {
      "jsx": true
    },
    "warnOnUnsupportedTypeScriptVersion": true,
    "project": ["./tsconfig.json", "./services/*/tsconfig.json", "./packages/*/tsconfig.json"]
  },
  "plugins": ["@typescript-eslint"],
  "extends": [
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking"
  ],
  "rules": {
    "no-underscore-dangle": "off",
    "react/prop-types": "off",
    "import/named": "off",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-member-accessibility": [
      "error",
      {
        "overrides": {
          "constructors": "no-public"
        }
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": ["strictCamelCase"],
        "leadingUnderscore": "forbid",
        "trailingUnderscore": "forbid"
      },
      {
        "selector": ["variable", "classProperty"],
        "types": ["boolean"],
        "format": ["StrictPascalCase"],
        "prefix": ["is", "should", "has", "can", "did", "will"]
      },
      {
        "selector": ["classProperty"],
        "types": ["boolean"],
        "modifiers": ["private"],
        "format": ["StrictPascalCase"],
        "prefix": ["_is", "_should", "_has", "_can", "_did", "_will"]
      },
      {
        "selector": "classProperty",
        "format": ["StrictPascalCase", "strictCamelCase"]
      },
      {
        "selector": ["classProperty", "classMethod"],
        "modifiers": ["private"],
        "format": ["StrictPascalCase", "strictCamelCase"],
        "leadingUnderscore": "require"
      },
      {
        "selector": ["parameter", "property"],
        "format": ["StrictPascalCase", "strictCamelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": ["parameterProperty"],
        "modifiers": ["private"],
        "format": ["strictCamelCase"],
        "leadingUnderscore": "allow"
      },
      {
        "selector": ["enumMember", "typeLike"],
        "format": ["StrictPascalCase"]
      },
      {
        "selector": "variable",
        "format": ["StrictPascalCase", "strictCamelCase"]
      },
      {
        "selector": "variable",
        "types": ["boolean", "number", "string"],
        "format": ["UPPER_CASE", "strictCamelCase"]
      },
      {
        "selector": ["interface"],
        "format": ["StrictPascalCase"],
        "prefix": ["I"]
      }
    ],
    "@typescript-eslint/no-dupe-class-members": "error",
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/no-invalid-this": "error",
    "@typescript-eslint/no-loop-func": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": "error",
    "no-use-before-define": "off",
    "@typescript-eslint/no-use-before-define": ["error"],
    "no-useless-constructor": "off",
    "@typescript-eslint/no-useless-constructor": "error"
  }
}
